module encoder(i,en,y);
input [7:0]i;
input en;
output [2:0]y;
reg [2:0]y;
always @(i or en)
if (!en)
y=3'bz;
else
case(i)
8'b00000001: y=3'b000;
8'b00000010: y=3'b001;
8'b00000100: y=3'b010;
8'b00001000: y=3'b011;
8'b00010000: y=3'b100;
8'b00100000: y=3'b101;
8'b01000000: y=3'b110;
8'b10000000: y=3'b111;
endcase
endmodule
module encoder_tb();
reg [7:0]i;
reg en;
wire [2:0]y;
encoder u1(i,en,y);
initial 
begin 
#0 en=1'b0;
#0 i=8'b00000001;
#10 i=8'b00000010;
#10 i=8'b00000100;
#10 i=8'b00001000;
#10 i=8'b00010000;
#10 i=8'b00100000;
#10 i=8'b01000000;
#10 i=8'b10000000;
#10 en=1'b1;
#10 i=8'b00000001;
#10 i=8'b00000010;
#10 i=8'b00000100;
#10 i=8'b00001000;
#10 i=8'b00010000;
#10 i=8'b00100000;
#10 i=8'b01000000;
#10 i=8'b10000000;
#100 $finish;
end
initial 
$monitor($time,"i=%b,en=%b,y=%b",i,en,y);
endmodule

